#include <iostream>
#include <fstream>

using namespace std;

int main()
	{
		// метод трапеций
		int a =33;
		double h = 0;
		double result = 0;
		//double f[a] = {0.000,0.0053675 ,0.010735,0.01610 ,0.021470,0.089365 ,0.15726,0.225155 ,0.293050,0.3433135 ,0.393577,0.443841 ,0.494105,0.505914 ,0.517723,0.529532 ,0.541341,0.5352195 ,0.529098,0.5229765 ,0.516855,0.5047955 ,0.492736,0.4806765 ,0.468617,0.4555955 ,0.442574,0.4295505 ,0.416531,0.4043675 ,0.392205,0.380042 ,0.367879};
		double f[a] = {0.000,0.099091 ,0.120906,0.190516 ,0.214668,0.220381 ,0.24405,0.262102 ,0.272904,0.338935 ,0.393903,0.448676 ,0.474091,0.523176 ,0.532522,0.5425 ,0.541341,0.537775 ,0.532541,0.522593 ,0.516855,0.506372, 0.494524,0.481785 ,0.468615,0.455429 ,0.442307,0.42134 ,0.416331,0.391938 ,0.391592,0.379573 ,0.367879};
		
		double x[a] = {0};
		
		double ff[9] = {0, 0.21470,0.293050,0.494105,0.541341,0.516855,0.468617,0.416531,0.367879};
		double xx[9] = {0, 0.125,0.25,0.375,0.5,0.625,0.75,0.875,1};

		
		x[0] = 0;
		x[1] = 0.03125;
		x[2] = x[1] + 0.03125;
		x[3] = x[2] + 0.03125;
		x[4] = x[3] + 0.03125;
		x[5] = x[4] + 0.03125;
		x[6] = x[5] + 0.03125;
		x[7] = x[6] + 0.03125;
		x[8] = x[7] + 0.03125;
		x[9] = x[8] + 0.03125;
		x[10] = x[9] + 0.03125;
		x[11] = x[10] + 0.03125;
		x[12] = x[11] + 0.03125;
		x[13] = x[12] + 0.03125;
		x[14] = x[13] + 0.03125;
		x[15] = x[14] + 0.03125;
		x[16] = x[15] + 0.03125;
		x[17] = x[16] + 0.03125;
		x[18] = x[17] + 0.03125;
		x[19] = x[18] + 0.03125;
		x[20] = x[19] + 0.03125;
		x[21] = x[20] + 0.03125;
		x[22] = x[21] + 0.03125;
		x[23] = x[22] + 0.03125;
		x[24] = x[23] + 0.03125;
		x[25] = x[24] + 0.03125;
		x[26] = x[25] + 0.03125;
		x[27] = x[26] + 0.03125;
		x[28] = x[27] + 0.03125;
		x[29] = x[28] + 0.03125;
		x[30] = x[29] + 0.03125;
		x[31] = x[30] + 0.03125;
		x[32] = x[31] + 0.03125;
		x[33] = x[32] + 0.03125;


		for(int i = 0; i < a; i++)
			{	
				cout<<x[i]<<" || "<< f[i] << endl;
			}


		ofstream fout("load.txt");   
             
                  for (int i = 0; i < 9; i++)
                  	{
                    	fout<< xx[i]<<"\t "<<ff[i]<<endl;
                  	}
                 
                 fout.close();



		h = (x[33] - x[0])/ 33;
		
		cout << "----------------------------------------------------- " << endl;
		cout << "Метод трапеци " << endl;
		cout <<"шаг = " << h << endl;
		
		
		result = h * (((f[0] +f[33]) / 2) + f[1] + f[2] + f[3] + f[4] + f[5] + f[6] + f[7]+ f[8] + f[9] + f[10] + f[11] + f[12] + f[13] + f[14]+ f[15] + f[16] + f[17] + f[18] + f[19] + f[20] + f[21]+ f[22] + f[23] + f[24] + f[25] + f[26] + f[27] + f[28]+ f[29] + f[30] + f[31] + f[32]);

		cout << "результат для метода трапеций" << endl;
		
		cout<<"result = " << result << endl;
		
		cout << "----------------------------------------------------- " << endl;



		// метод симпосона
		double p = 0;
		double s = 0;
		double result1 = 0;

		
		
		s = (x[8] - x[0])/ 8;
		cout << "Метод симпосона " << endl;
		cout << "шаг = "<< s << endl;
		
		
		result1 = (s/3) * (f[0] + f[8] + 2*(f[2]+f[4]+f[6]+f[8]+f[10]+f[12]+f[14]+f[16]+f[18]+f[20]+f[22]+f[24]+f[26]+f[28]+f[30]+f[32])+ 4*(f[1]+f[3]+f[5]+f[7]+f[9]+f[11]+f[13]+f[15]+f[17]+f[19]+f[21]+f[23]+f[25]+f[27]+f[29]+f[31]));

		cout << "результат для метода симпосона" << endl;

		cout<<"result = " << result1 << endl;
		
		cout << "----------------------------------------------------- " << endl;
		
		p = result1 - result;
		
		cout << "Правило Рунге" << endl;
		

		

		

		//правило рунге
		int k = 33;
		double result2 = 0;
		double n = 0;
		double b = 0;
		double x2[k] = {0};
		double f2[k] = {0.000,0.099091 ,0.120906,0.190516 ,0.214668,0.220381 ,0.24405,0.262802 ,0.292904,0.338935 ,0.393903,0.448676 ,0.494091,0.523176 ,0.537922,0.5425 ,0.541341,0.537775 ,0.532541,0.525593 ,0.516855,0.506372, 0.494524,0.481785 ,0.468615,0.455429 ,0.442307,0.42934 ,0.416531,0.403938 ,0.391592,0.379573 ,0.367879};
		
		
		
		x2[0] = 0;
		x2[1] = 0.03125;
		x2[2] = x2[1] + 0.03125;
		x2[3] = x2[2] + 0.03125;
		x2[4] = x2[3] + 0.03125;
		x2[5] = x2[4] + 0.03125;
		x2[6] = x2[5] + 0.03125;
		x2[7] =	x2[6] + 0.03125;
		x2[8] = x2[7] + 0.03125;
		x2[9] = x2[8] + 0.03125;
		x2[10] = x2[9] + 0.03125;
		x2[11] = x2[10] + 0.03125;
		x2[12] = x2[11] + 0.03125;
		x2[13] = x2[12] + 0.03125;
		x2[14] = x2[13] + 0.03125;
		x2[15] = x2[14] + 0.03125;
		x2[16] = x2[15] + 0.03125;
		x2[17] = x2[16] + 0.03125;
		x2[18] = x2[17] + 0.03125;
		x2[19] = x2[18] + 0.03125;
		x2[20] = x2[19] + 0.03125;
		x2[21] = x2[20] + 0.03125;
		x2[22] = x2[21] + 0.03125;
		x2[23] = x2[22] + 0.03125;
		x2[24] = x2[23] + 0.03125;
		x2[25] = x2[24] + 0.03125;
		x2[26] = x2[25] + 0.03125;
		x2[27] = x2[26] + 0.03125;
		x2[28] = x2[27] + 0.03125;
		x2[29] = x2[28] + 0.03125;
		x2[30] = x2[29] + 0.03125;
		x2[31] = x2[30] + 0.03125;
		x2[32] = x2[31] + 0.03125;
		x2[33] = x2[32] + 0.03125;
		
		n = (x2[33] - x2[0]) / 33;

		cout<<"шаг = " << n << endl;
		
		

		/*for(int i = 0; i < k; i++)
			{	
				cout<<x2[i]<<" || "<< f2[i] << endl;
			}*/

		result2 = (n/3) * (f2[0] + f2[33] + 2*(f2[2]+f2[4]+f2[6]+f2[8]+f2[10]+f2[12]+f2[14]+f2[16]+f2[18]+f2[20]+f2[22]+f2[24]+f2[26]+f2[28]+f2[30]+f2[32])+ 4*(f2[1]+f2[3]+f2[5]+f2[7]+f2[9]+f2[11]+f2[13]+f2[15]+f2[17]+f2[19]+f2[21]+f2[23]+f2[25]+f2[27]+f2[29]+f2[31]));

		cout << "результат для правила Рунге" << endl;
		
		cout <<"result = "<< result2 << endl;
		cout << "----------------------------------------------------- " << endl;
		b = result1 - result2;

		cout<< "погрешность между симпосоном и рунге = " << b << endl;
		

		// метод прямоугольников
		double nn = 0;
		double nnn = 0;
		double d = 0;
		double result3 = 0;

		double x3[k] = {0};
		double f3[k] = {0.000,0.099091 ,0.120906,0.190516 ,0.204668,0.230381 ,0.24105,0.262802 ,0.292904,0.332935 ,0.393903,0.441676 ,0.464091,0.523176 ,0.527922, 0.5325 ,0.541341,0.537775 ,0.532541,0.525593 ,0.516855,0.506372, 0.484524,0.471785 ,0.468615,0.455429 ,0.432307,0.42934 ,0.416531,0.391938 ,0.361592,0.379573 ,0.367879};
		
		
		
		x3[0] = 0;
		x3[1] = 0.03125;
		x3[2] = x3[1] + 0.03125;
		x3[3] = x3[2] + 0.03125;
		x3[4] = x3[3] + 0.03125;
		x3[5] = x3[4] + 0.03125;
		x3[6] = x3[5] + 0.03125;
		x3[7] =	x3[6] + 0.03125;
		x3[8] = x3[7] + 0.03125;
		x3[9] = x3[8] + 0.03125;
		x3[10] = x3[9] + 0.03125;
		x3[11] = x3[10] + 0.03125;
		x3[12] = x3[11] + 0.03125;
		x3[13] = x3[12] + 0.03125;
		x3[14] = x3[13] + 0.03125;
		x3[15] = x3[14] + 0.03125;
		x3[16] = x3[15] + 0.03125;
		x3[17] = x3[16] + 0.03125;
		x3[18] = x3[17] + 0.03125;
		x3[19] = x3[18] + 0.03125;
		x3[20] = x3[19] + 0.03125;
		x3[21] = x3[20] + 0.03125;
		x3[22] = x3[21] + 0.03125;
		x3[23] = x3[22] + 0.03125;
		x3[24] = x3[23] + 0.03125;
		x3[25] = x3[24] + 0.03125;
		x3[26] = x3[25] + 0.03125;
		x3[27] = x3[26] + 0.03125;
		x3[28] = x3[27] + 0.03125;
		x3[29] = x3[28] + 0.03125;
		x3[30] = x3[29] + 0.03125;
		x3[31] = x3[30] + 0.03125;
		x3[32] = x3[31] + 0.03125;
		x3[33] = x3[32] + 0.03125;


		cout << "----------------------------------------------------- " << endl;

		cout << "Метод прямоугольников" << endl;


		d = (x3[33] - x3[0])/ 33;

		cout << "шаг = " << d << endl;

		result3 = d * (f3[0]+f3[1]+f3[2]+f3[3]+f3[4]+f3[5]+f3[6]+f3[7]+f3[8]+f3[9]+f3[10]+f3[11]+f3[12]+f3[13]+f3[14]+f3[15]+f3[16]+f3[17]+f3[18]+f3[19]+f3[2]+f3[20]+f3[21]+f3[22]+f3[23]+f3[24]+f3[25]+f3[26]+f3[27]+f3[28]+f3[29]+f3[30]+f3[31]+f3[32]+f3[33]);

		
		cout << "результат для метода прямоугольников" << endl;
		
		
		cout << "result = "<< result3 << endl;
		
		cout << "----------------------------------------------------- " << endl;
		
		nn = result3 - result2;
		
		cout<< "погрешность между методом прямоугольников и правилом рунге = " << nn << endl;
		
		cout << "----------------------------------------------------- " << endl;

		nnn = result2 - result;

		cout<< "погрешность между методом трапеций и правилом рунге = " << nnn << endl;
		
		cout << "----------------------------------------------------- " << endl;

		ofstream fout1("ans1.dat");   
       
        fout1 << result << "    " << nn <<endl;
            
        fout1.close();

        


        ofstream fout2("ans2.dat");   
       
        fout2 << result1 << "    " << b <<endl;
            
        fout2.close();
		

		return 0;
	} 
